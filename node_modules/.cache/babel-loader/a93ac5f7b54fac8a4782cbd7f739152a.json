{"ast":null,"code":"var _jsxFileName = \"/home/dci-student/Dev/practice/jscript/react/april/spa-components-pass-generator-Gercai/src/components/form/index.js\";\nimport React from 'react';\nimport './index.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"please Enter\",\n      passwordLength: 0,\n      big: false,\n      special: false\n    };\n    this.characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n    this.bigCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    this.special = \"!ยง$%&?\";\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  } // FormMethods\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.generatePassword(this.state.passwordLength); // Do stuff\n  }\n\n  handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleCheck(event) {\n    const {\n      name,\n      checked\n    } = event.target;\n    this.setState({\n      [name]: checked\n    });\n  } // HandlePassword\n\n\n  generatePassword(length) {\n    let passwordString = \"\";\n    let generatorString = this.characters;\n    if (this.state.big) generatorString += this.big;\n    if (this.state.special) generatorString += this.special;\n\n    while (length > 0) {\n      length--;\n      passwordString += this.characters.charAt(Math.floor(Math.random() * this.characters.length));\n    }\n\n    this.setState({\n      password: passwordString\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, \"Generate Password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"Result: \"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      value: this.state.password,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Generate Password\")), /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 12\n      }\n    }, \"Setting\")), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Passwordlength\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"passwordLength\",\n      value: this.state.passwordLength,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"big\",\n      onChange: this.handleCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), \"useMixedCase\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"special\",\n      onChange: this.handleCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), \"specialCase\"))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/dci-student/Dev/practice/jscript/react/april/spa-components-pass-generator-Gercai/src/components/form/index.js"],"names":["React","Form","Component","constructor","props","state","password","passwordLength","big","special","characters","bigCase","handleChange","bind","handleSubmit","handleCheck","event","preventDefault","generatePassword","name","value","target","setState","checked","length","passwordString","generatorString","charAt","Math","floor","random","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nclass Form extends React.Component {\n\n    constructor(props){\n        \n        super(props);\n\n        this.state = {\n            password: \"please Enter\",\n            passwordLength: 0,\n            big: false,\n            special: false\n        }\n\n        this.characters = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n        this.bigCase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        this.special = \"!ยง$%&?\";\n\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    }\n\n    // FormMethods\n    handleSubmit(event){\n        event.preventDefault();\n        this.generatePassword(this.state.passwordLength);\n\n        // Do stuff\n    }\n\n    handleChange(event){\n\n        const {name,value} = event.target;\n        this.setState({\n             [name]: value\n        })\n\n    }\n\n    handleCheck(event){\n\n         const{name,checked} = event.target;\n        \n          this.setState({\n             [name]: checked\n          })\n        \n    }\n\n    // HandlePassword\n\n    generatePassword(length){\n\n        let passwordString= \"\";\n\n        let generatorString = this.characters;\n\n        if(this.state.big)\n        generatorString += this.big;\n        if(this.state.special)\n        generatorString += this.special;\n\n\n        while(length > 0){\n            length--;\n            passwordString += this.characters.charAt(Math.floor(Math.random() * this.characters.length));            \n        }\n\n        this.setState({\n            password: passwordString\n        })\n        \n    }\n\n\n    render(){\nreturn(\n\n<article>\n    <h1>Generate Password</h1>\n    \n    \n    <form onSubmit={this.handleSubmit} className=\"flex\">\n \n    <fieldset>\n        <label>Result: </label>\n        <input name=\"password\" value={this.state.password} readOnly/>\n        <button>Generate Password</button>\n    </fieldset>\n    <fieldset>\n    <label><span>Setting</span></label>\n            \n            <label>\n                Passwordlength\n                <input name=\"passwordLength\" value={this.state.passwordLength} onChange={this.handleChange}/>\n            </label>\n            \n            <label>\n            <input type=\"checkbox\" name=\"big\" onChange={this.handleCheck} />\n                useMixedCase\n            </label>\n            \n            <label>\n                <input type=\"checkbox\" name=\"special\" onChange={this.handleCheck}/>\n                specialCase\n            </label>\n    </fieldset>\n\n    </form>\n</article>\n)\n    }\n\n\n\n\n}\n\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}